{"version":"1.0","registers":[["%",[{"text":"oj/1999DIV4/D.cpp","registerMode":0}]],[".",[{"text":{"commandList":["<Esc>"],"actionKeys":[],"waitingForAnotherActionKey":false,"actionsRun":[{"name":"","isJump":false,"createsUndoPoint":false,"preservesDesiredColumn":false,"keysPressed":["i"],"actionType":"command","isCompleteAction":true,"runsOnceForEachCountPrefix":false,"modes":[0],"keys":[["i"],["<Insert>"]],"multicursorIndex":0},{"name":"","isJump":false,"createsUndoPoint":false,"preservesDesiredColumn":false,"keysPressed":["c","p","p","<BS>","<BS>","<BS>","<BS>","<BS>","<BS>","<BS>","<BS>","c","p","p"],"actionType":"command","isCompleteAction":true,"runsOnceForEachCountPrefix":false,"modes":[],"keys":[],"contentChanges":[{"text":"","range":[{"line":101,"character":0},{"line":101,"character":0}],"rangeOffset":2720,"rangeLength":0},{"range":[{"line":100,"character":4},{"line":101,"character":0}],"rangeOffset":2719,"rangeLength":1,"text":""},{"range":[{"line":100,"character":3},{"line":100,"character":4}],"rangeOffset":2718,"rangeLength":1,"text":""},{"range":[{"line":100,"character":2},{"line":100,"character":3}],"rangeOffset":2717,"rangeLength":1,"text":""},{"range":[{"line":100,"character":1},{"line":100,"character":2}],"rangeOffset":2716,"rangeLength":1,"text":""},{"text":"cpp","range":[{"line":100,"character":0},{"line":100,"character":1}],"rangeOffset":2715,"rangeLength":1}],"cursorStart":{"line":101,"character":0},"cursorEnd":{"line":100,"character":3}},{"name":"","isJump":false,"createsUndoPoint":false,"preservesDesiredColumn":false,"keysPressed":["<Esc>"],"actionType":"command","isCompleteAction":true,"runsOnceForEachCountPrefix":false,"modes":[1],"keys":[["<Esc>"],["<C-c>"],["<C-[>"]]}],"actionsRunPressedKeys":["i","c","p","p","<BS>","<BS>","<BS>","<BS>","<BS>","<BS>","<BS>","<BS>","c","p","p","<Esc>"],"bufferedKeys":[],"allowPotentialRemapOnFirstKey":true,"hasRunOperator":false,"isInsertion":true,"transformer":{"transformations":[]},"count":0,"operatorCount":0,"registerKey":"","registerName":"\""},"registerMode":0}]],[":",[{"text":{"commandList":["w"],"actionKeys":[],"waitingForAnotherActionKey":false,"actionsRun":[],"actionsRunPressedKeys":[],"bufferedKeys":[],"allowPotentialRemapOnFirstKey":true,"hasRunOperator":false,"isInsertion":false,"transformer":{"transformations":[]},"count":0,"operatorCount":0,"registerKey":"","registerName":":"},"registerMode":0}]],["\"",[{"registerMode":0,"text":"pref"}]],["#",[{"text":"D.cpp","registerMode":0}]],["/",[{"text":"disable","registerMode":0}]],["1",[{"text":"        vector<int> prefixProd(sz+1,0);\n        int j = 0;\n        while(j<sz) {\n\n            if(nums[j]==0) {\n                prefixProd[j+1] = 0;\n                prod = 1;\n            }\n            else {\n                prod*=nums[j];\n                prefixProd[j+1] = prod;\n            }\n\n\n            j++;\n        }\n\n        cout<<prefixProd<<endl;\n\n\n\n        int fneg = -1, lneg = 1;\n        j = 0;\n        while(j<sz) {\n\n            if(fneg<0 && nums[j]<0) {\n                fneg = j;\n            } \n            else if(lneg<0 && nums[j]<0) {\n                lneg = j;\n            }\n            if(nums[j]==0) {\n\n                int prodm = prefixProd[lneg] - prefixProd[fneg+1];\n                maxi = max(maxi,max(prodm,prefixProd[j]));\n\n                fneg = -1,lneg = 1;\n            }\n\n            j++;\n        }\n\n        if(prodm)\n","registerMode":1}]],["0",[{"text":"            if(pref == 0) pref =1;","registerMode":1}]],["*",[{"text":"","registerMode":0}]]]}