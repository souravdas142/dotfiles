#!/bin/bash

version="$(\cat ./version)"
YouTube_original_name="youtube_${version}.apk"
ver="v${version}"
revanced_name="ReVancedYT-${ver}-$(date "+%Y_%m_%d_%H_%M").apk"

function release_dl() {

	patches_url=$(curl -s  https://api.github.com/repos/revanced/revanced-patches/releases/latest | jq '.assets[] | select(.name|endswith("rvp")) | .browser_download_url')
	patches_name=$(echo $patches_url | awk -F/ '{print $NF}' | tr -d '"')



	cli_url=$(curl -s  https://api.github.com/repos/revanced/revanced-cli/releases/latest | jq '.assets[] | select(.name|endswith("jar")) | .browser_download_url')
	cli_name=$(echo $cli_url | awk -F/ '{print $NF}' | tr -d '"')




	urls=(
		$patches_url
		$cli_url
	)


}


#######################################################


function devel_dl() {

	patches_url=$(curl -s  https://api.github.com/repos/revanced/revanced-patches/releases | jq -r 'map(select(.prerelease)) | first | .assets[] | select(.name|endswith("rvp")) | .browser_download_url')
	patches_name=$(echo $patches_url | awk -F/ '{print $NF}' | tr -d '"')



	cli_url=$(curl -s https://api.github.com/repos/revanced/revanced-cli/releases | jq -r 'map(select(.prerelease)) | first | .assets[] | select(.name|endswith("jar")) | .browser_download_url')
	cli_name=$(echo $cli_url | awk -F/ '{print $NF}' | tr -d '"')



	urls=(
		$patches_url
		$cli_url
	)


}

function offline_dl() {


		patches_name_devel=`ls revanced-patches*dev*`
		cli_name_devel=`ls revanced-cli*dev*`
		patches_name_release=`ls revanced-patches* | grep -v dev`
		cli_name_release=`ls revanced-cli* | grep -v dev`

		if [[ -n "$patches_name_devel" && -n "$patches_name_release" ]]; then


			read -p "both devel and release available choose one [r,d] ? " input

			if [[ "$input" == "r" ]]; then
				patches_name=$patches_name_release
				cli_name=$cli_name_release
			elif [[ "$input" == "d" ]]; then
				patches_name=$patches_name_devel
				cli_name=$cli_name_devel
			else
				echo -e "Didn't understand \n"
			fi

		elif [[ -n "$patches_name_devel" ]]; then

				patches_name=$patches_name_devel
				cli_name=$cli_name_devel

		elif [[ -n "$patches_name_release" ]]; then

				patches_name=$patches_name_release
				cli_name=$cli_name_release

		else
			echo -e "There is no patches available offline\n please see other options\n"

		fi



	echo -e "$patches_name, $cli_name\n"

	[[ -z $patches_name && -z $cli_name ]] && echo -e "files doesn't exists\n" && exit

}




function download_all() {

	if [[ "$1" == "-d" ]]; then

		devel_dl

		echo -e "devel downloading...\n\n\n"
		for i in ${urls[@]};
		do
			echo -e "Downloading ${i} ...\n"
			echo ${i} | xargs curl -LJO
		done

	elif [[ "$1" == "-r" ]]; then

		release_dl

		echo -e "\n\n\n"
		for i in ${urls[@]};
		do
			echo -e "Downloading ${i} ...\n"
			echo ${i} | xargs curl -LJO
		done


	elif [[ "$1" == "-o" ]]; then

		offline_dl

		echo -e "\nSkip Downloading...\n"

		[[ ! -e "${YouTube_original_name}" ]] && echo -e "There is no YouTube original apk in current dir\n" && exit

		if [[ -e ${cli_name} && -e ${patches_name} ]]; then
			echo -e "\nbuilding...\n"
		else
			echo -e "\nFiles are missing to build, Please provide below option:\n"
			echo -e "\nThe options are:\n\n\t-d : Download all resourses\n"
			exit
		fi

	else
		echo -e "\nThe options are:\n\n\t-d : Download all resourses\n"
		exit
	fi

}


download_all $1 $2

echo -e "\n Revanced-Patches_name = $patches_name \nRevanced-Patches_url = $patches_url \
	\n\n Revanced-cli_name = $cli_name \nRevanced-cli_url = $cli_url"

echo -e "\n\n\n"


include_patch=(
	-e "Custom branding"
	-e "Remove player controls background"
	-e "Change header"
	-e "Enable slide to seek"
	-e "Change package name"
	-e "Predictive back gesture"
)

#exclude_patch=(
#	-d "Alternative thumbnails"
#	-d "Always repeat"
#)


echo -e " command run: \n
java -jar ${cli_name} patch \\
	--patches ${patches_name} \\ \n
	"${include_patch[@]}" \\ \n
	"${exclude_patch[@]}" \\ \n
	--out ${revanced_name} \\
	--keystore ./prev_key.keystore \\
	--keystore-entry-alias=alias \\
	--keystore-entry-password=ReVanced \\
	--keystore-password=ReVanced \\
	${YouTube_original_name} \n
"


java -jar ${cli_name} patch \
	--patches ${patches_name} \
	"${include_patch[@]}" \
	"${exclude_patch[@]}" \
	--out ${revanced_name} \
	--keystore ./prev_key.keystore \
	--keystore-entry-alias=alias \
	--keystore-entry-password=ReVanced \
	--keystore-password=ReVanced \
	${YouTube_original_name}
